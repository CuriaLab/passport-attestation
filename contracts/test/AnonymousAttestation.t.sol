// SPDX-License-Identifier: MIT
pragma solidity ^0.8.26;

import "eas-contracts/IEAS.sol";
import "eas-contracts/Common.sol";
import "eas-contracts/ISchemaRegistry.sol";
import "forge-std/Test.sol";

import "../src/AttestationResolver.sol";
import "../src/AnonymousAttester.sol";
import "../src/Schema.sol";
import "../src/UltraPlonkVerifier.sol";

contract AttestationTest is Test {
    uint256 optimismFork = vm.createFork("https://mainnet.optimism.io");

    IEAS immutable eas = IEAS(0x4200000000000000000000000000000000000021);
    ISchemaRegistry immutable schemaRegistry =
        ISchemaRegistry(0x4200000000000000000000000000000000000020);

    address immutable target = 0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF;

    AnonymousAttester anonymousAttester;
    bytes32 schema;

    function setUp() public {
        vm.selectFork(optimismFork);

        // create attestation resolver
        AttestationResolver resolver = new AttestationResolver(eas);

        // register schema with resolver
        schema = schemaRegistry.register(SCHEMA_STRING, resolver, true);

        // create anonymous attester
        anonymousAttester = new AnonymousAttester(eas);
        anonymousAttester.addSchema(schema);
        anonymousAttester.changeVerifier(new UltraPlonkVerifier());
        anonymousAttester.changePubkey(
            [
                bytes32(
                    hex"1fc12a4421a52b9485cd696b8cfe29c1c3fcaf77f9fadccce0d47593301ad232"
                ),
                hex"0dd32faaef5273e1fe22189585be98493fd3d2c2c6e61728dda32ec5335f3ce3"
            ]
        );

        // add anonymous attester to authorized attesters
        resolver.addAuthorizedAttester(address(anonymousAttester));
    }

    function test_AnonymousAttestation() public {
        uint256 role = 1;
        bytes32 id = anonymousAttester.attest(
            schema,
            target,
            role,
            "Hello, world!",
            AttestationProof({
                revokerHash: 0x156244c131d6f68246496786659cf2e7a1119e83b3e3d88173f1eb5ce3b110cf,
                nonce: 0x00000000000000000000000000000000000000000000000000000000075bcd15,
                timestamp: 0x000000000000000000000000000000000000000000000000000000006673f6cc,
                proof: hex"0c703e256e543ff1f44411a1d6f73881e3d8e3e833bce33e8d33b854854a83a22761bb6ea49d233315c4340743130dd4c23c3903aab1bf1d9e36122a7cf6b3b1248bd9e4933fb3efcc1649ef961f84db89194aec9537d1c2b436b5bf3291e9670846df6f496e5c99147734a28367dad0cb893afca30ce405ebb96dbb344119a50f1ca33de11b995c2cac227bd4d8f061f850b4f6f385df041daa812e73db19b0167a08bbd317e5b9fb5d1ecc0b5b20a9d94e06d398ff524551a1f1445c958f7916ea86c51d15292652fa50ee4f30631492971cb2ed308a26c6d1f5dde13ccfd1034fd354dda50a6b5d9e92c980cf68757b7237dc89271ab252f253399ebd5aeb2c1b33e521d0f7127b07ce74513f5b5373f28c77b1b6e3409c30b097154dbba114633a8d95a51f4c4ee89079455be3e22a25a2b082239c9f5196a19d11d04b072d4aaba001f09dd28a74c615bee6cc8f50b1aefc2b0cf7fdb5f672a048a029bb227489ebf2d9ee3a7285f77a86f95cc361108d6ff5183d6d79644a239a00e9e5038c9adc6c1d3469062de179454edb1947cb2e3e3412509eaf14c752e4cd3f2f0e4515a68dab739194e25cde115e7bfebf8e9b27bd604947cea1c9aeeb514d3e1df7b4193ba339072f2cb01639be1c87430bfed8e0dcb1a9903a8829f83981290570394a1aa08b7e5a149c91a876f24ba24468fc72f2883d3d2755c384bd25e92c59e5ebe66f50f1166462a07d0c1119680c58efcb7f2c20e3851b92ac5beda30ee69a3cdcef1890ba89546535149849a200e092867a2d97a1e9b61c3e4dc20c2b578a44ab7ee43caac7b581f083d08329a823cc3b60f12e9c6bdc082f434a751b5ed5bc367de40ae6837f6d05e8abfe3b73bcbc64fa10f2dd89fb2c4f6be43d258ae59d27e64821ff19c9a10fc0ba143f515e21b5498427aa8b4d9f5c275fde107aac95cb1193d85f96c67ec4d8665ab553b9af27d94d39043aceb658e65fa40673829fe355e7bf5811f07ec2ed83437a05b62ea3ad85484f3c52852501276118a2d3425e99d268468aa3c68a141dc2c5f556fd3746e33f66cd66ade65f4d1202e84bbde4b2f02d23cc0f2c00cda97173bbf4eff62845aa66bb6c322d9e5fa12c01a0fcc9bb8e56d8f84bc47496383c9b9b06f6ed81c302de46b9d14c3bc41025dc395f8ef0d04e136a70c01ba4b87338883f1264d0f37523a217a35e3998b3155023ac24e0591a204918aae212de421ad3059558fca286025b447a4300e8f42f40d04107f635305d00418bced4e60a3f133058b173058f257cb29fcde60651151fa6e6f7a337ea3f2670023d5a85c0dca52f5ce32138d20222cd2d1e9be3750390e2e65d480ff3e6970c7a329ded6f7c4fdedc4247477fbf8e10150c100ea82dd5d10b7bb58a6215c5df445285f7260c9f6b35f780d1a1c834e95f4806bb8f0b197b2d6ceb2233dcc9cfb33e7ba0b4d9b614cfeb0c1047e832dcc9d5768faa0dbbc705059b71f57d0700050573d8b9ab85df03f5644070b559f15e23dfdd1f09990f92fb1f62107f6bba3d55f968857ad96a6b7e09be510b7858fae164de7329b6722e991fa77ac5a9879233d46b024521e24c946c00b37a63906f63075d7d003919308bb8a74d0c943184dcbb33bf475a16b7cfcb7f118b872cdac9377c2d1499703d2121a8aadbcb57b7aab232e23935c81937087e6eb503f83f52f4833b05bbfca38d08b4533980571ed6358998201c74153d5786ff95f8652f0e29397816016d64c14f3d3018b6a35ec70de16ba80079124ef388c9ca1e1eab9a58323a21fc0a620bad0e37b6ab278396e3a3f65c83ff7e22e994a5d8526fbeedab4570149bfd46221207981ad01fdebd256c1069f42f8ca983a6972a716842b30ed9872aa3b56405ec42ba4981250f56e2971b4ba02e0351b7e27e76ef2666f84e6d8f26d76552f12e980b6381637e57eb6fea6e5d44ed45b7aa259b78c2669c9fd12a2e4c0184a92bb12f1388e5ce2e8c830e7500eedbab4ab611d40d9b0bdd975ab30ec6b1f8f4bf21d7e2b57c69ab47ec298caeb284fb932b630b11009818a1895b062ea17e0dba4e4fc86cbfb06c64aa9a69c562b8a3e5d6009dc882debc05bf050e68d7192a80d68e251755842ec802afbe0b0e19f445b0902a37ba620a1ac96720187105206245b490f30058129c1c4ee515fabd6369328011ee1416b0403b98251850c37d8307c99ee94e338f6fe5eaa36d85f5692c83293bcc40881a279e0329230c207930effe55ece0967a1f397916098e0bed2db6f734ececee2b15fa6a0bf482623ed8128be96a37286fea48ff3651c22275e7b5bd72ede716b352fa7d02e473a785ab9206c5015076de4caba12730df3f326e10565bf8b1f8b31f1efb29c6f37537f716c7e07fbd65faea5613eb1fa9d3f29d2200131e317f0581793e123672d5b13f99bdd6ac541d8580dc400cbe5b9f8e505d3b2e50e0502edbca6f1027d282ecf81fd5edabd63a217578cead453a7535a0f29ba7ab8987052034861db61cd5b0f593cb73d6ba97d32d8b95d97b2511d4ae39fb9968d0304b1c9d8704051b110535542abddbf6342adbfbf6dab383dbcaf509b05faefd696f3e31062752d076e82c39f6aa3fb3c27e13a77ef12176ab22835898442799f6a19ff7ca107439bdd21403f7cd77ac2c640a44f953fd4c570fba567d0fa140f00188161e11ddd3fbfff12119ece22200f98ee5a002b68c4e6e2ae72c71efbd5c19f9c9e12f2ab52dd1acb14b7bee96717240f937ef0057f0354d76cad65666df9253fbcf2bec780d48e5759e549e97f8a1c6c4f76e57a8640e562d4fab58cb12a44c6ffe13d8dde0df0fbee4cb720bd42f93580e4a07cfae64ccd20c21d3aa8421506a030a03d60880e1d59724390e2512bc702ca41277beabbec9da2adff3d2d3cb972c00fadfba059f8a1ffca1b18f5295270aba80a26f40307ecf6d4b62da29835f900951dc1846221b1189b46627015e53257ce8a93f4cbb37b9b10a53291d0dd3ff"
            })
        );

        // verify attestation
        Attestation memory attestation = eas.getAttestation(id);
        assertEq(attestation.schema, schema);
        assertEq(attestation.recipient, target);
        assertEq(attestation.attester, address(anonymousAttester));
        assertEq(attestation.expirationTime, 0);
        assertEq(attestation.revocable, true);
        assertEq(attestation.refUID, 0x0);
        assertEq(
            attestation.data,
            abi.encode(
                Schema({
                    role: role,
                    message: "Hello, world!",
                    ref: bytes.concat(bytes32(uint256(1718875852)))
                })
            )
        );
        assertEq(attestation.revocationTime, 0, "Revocation time should be 0");

        // Revoke attestation
        anonymousAttester.revoke(
            schema,
            id,
            bytes32(
                uint256(
                    16894418165789815420328521984477319517566648254079687277423554561402165065952
                )
            )
        );

        // Verify revocation
        Attestation memory revokedAttestation = eas.getAttestation(id);
        assertGt(
            revokedAttestation.revocationTime,
            0,
            "Revocation time should be greater than 0"
        );

        // should be able to only attest once using the same param
        vm.expectRevert();
        anonymousAttester.attest(
            schema,
            target,
            role,
            "Hello, world!",
            AttestationProof({
                revokerHash: bytes32(
                    uint256(
                        4916179360654529033703385338351006789068467821670893077446447393102117697567
                    )
                ),
                nonce: bytes32(uint256(123456789)),
                timestamp: bytes32(uint256(1718875852)),
                proof: hex"22be7705a7801c0d264f626d75ddca3f4f55160f0b8748100b09500971c6bc8c1442933eb1437567972ace3c2965a5172b9fd657b927261636fcb2e3cce56a2e0ec182d8238536c1878124a527533ea01dffe8ad364b8ddde15106c946c5158001d30dedaf65ece7a892ab15fdf2901c1b39204b06d07cd3450b8b9415682171143b45b2789d5980c703d9286b9dc1882bf7f7c7f9b91c9400e0f1769c8b3a5f27509f36b7d08f91db6e0c5390aae0753df2044322919d1a7631684d2a3966751bfb48d0da8df7993f71ec15d39f5c62068544ae858c5607b458b5772a88fbdf10e56869be23fd55b46b80510740c01ca038e88e82086f5f08b5026be6bf0fa22426ee5ebd358ab2976b2467ff6a832253024b6b3179e2aff8b8bfa3a8a82d5e018a1e9130600787d8b40cabc1cfead90224cea9f359e1c942c83a272c6c14902a1e289c97cf757e5343748b546b19cc4a5db274a88805ec8955920391867a0322fc562142e7ef61da26e50bf99b80874c14d105e1642073ae80742c104dc88029b007c73fe49bb50d36000f2dbe832dad1b746452d1dd37b161f28a105392e302fc7e033665b3cb45f84348ded0132e67ea01a467eb0e1a011ee8569963bc2e1f3113a8b9f5d9d8142538e564b8b025407fbe67e880c20fb5a52d8b3f0bdee52a6baceb85b30a556d4519b7f0c89c476a06f103b23d5f65f140dba3c27bef2e30412b3546ca51ca80bdb7a83d78139772cf003873c2838f300b616b0e1c99f5143b6542b342760bd44d6ba57cff8dfac1d6c83b9371fb9491f921a46b39bc421e0a6fada8dba1a87eedcaded7ac02ad71e1cd3fc31f274a46543403acf8272f114ba0ba5c70bbfca334e802070a088a33a9e68b41e249f794f67757c5f454e010530fbb572afdcbe25e3a9416b713cf4160d1f1ef33907832571f1d2a361b161cd1afb29069e48d85c38b880b60486d52e36c35210d4dccc1f07dfcf4471cbc2726a6fa59e7ae2bd3a22bf0cd03871390d3194127882ae9423b957e61b490d32b9f30815f5e1c039dd94bc7702c93c242b5407175092636b3bf4cd3c28810c90d2d9a4d534cea84bd66c9375717aed3e7690c023cab6225790460a323e692632041f756209d884b3c74f204046f4b32b857a902269711854b0b1198b9b40e830619f4e86009972fdfdc5fb206b671578b10c018ef7cd15ad3d1b86cf897cf5e28ce297b1a248102f5e22491c049fe471f4424233d02352c626995bbcef4e5320136ee9edfe64f6e9fb5854c17d46f8689da6f1110773206c2b8718aa9b45945093a009987e41d90d6e4ac3a11ddacc63f670d8ac41e2cd0fc0f07d4a86538e70a8f4355e38301d5f48ed94a6ff7d23a8effe6e12b0b36003465583201b5d73604014e83eaef38b849e23e7375441f928b57b16e81e707eea97ee5843a552d0b1108069845aa707fd6148e17d27e8eb1e649514cd58fe7dd8761daff37d8521a00d2ca41a8612c4811b792d2d319fd2ec9ff88070d5c8be081759a738ca9abc80da02eee5858eee3bd55b2d11bd71852d089da6f77cb5577c43dcc7d9f7d750212bef77fe32d7484db62a0234cf35cf29db5ef6037607dd9c7f6c368fc19897c1956396a26b78d54d4d4abc66f73dbf69c8bf17b6d86d7fa3d7b915ccd989e330fe482c322b0ea90a5ab41e89eee3ba70c6c061b181b06eb9ff8efa787d8fea41a8299b0be62524b020a5dce81b6243bc090e5fa7a23b3e7a5c8abb7d2e91ece0975ce3139f99c1fd59aa5df77bbbd0aadb0547f0165ce8e48dc0527855fa0ac0070c509d6405c421113a7966e443690e7b8bdb2117111477ec56117d59aa9212a8f45fdfa816045e7ce25e672b6461e3a19a662b92a6a081de6bba273e832b8276221e7d6dffb365cbbf3f2a2ca1b878d6e9331361d456521416996c85d1b6d2152b369623c63f08ac218ce731a35e95ac497c2881b428e66d3daf1659cabb02527bd0ca982dc796a73d1d1c0437878bc21953732ca73331f213a3139c4f2591d06282cd9919f0f4d3b8f41bd7c85a6677159511d979cc245bc837249de0f63286c09d279d9431ddd311bb6f59b773eab6db3e16473cf11ab90eb2d5a72709e1a8ef4d8103fdad45247588a22fa85e6389c0b1e0812744c91dd3f4f87971a1923a8c5ff2c36e42d5ca0fa2d31d696e35402b7fe0d9925689fe813d93c7bf92923d726a1d5afdd95809bf1da309635aebeb962a4f0bbd00abcde7e5a31f8e3df1296350f6e397df41a2ff72dca6558d379fbcf0e49433ada5b6b397d505c23e801d71f266769645ae556b0f660f99b92ed037dbb82d3e84b7c9e2a1fb70e2790073f88a32dca9bdff0bfb039cd8a00d9973e6fa38fe7a275eef88b73e88e21a4206673f2e827ec66f286dac441c731e4c06318d41eaa313c56a942e0a3512a3f004c85378023a5a4bc93f00dc1d5e7c09b4143fd177a987938139e95ea7906f312aa332fb826e7338336ac2d4f956ab8fa54c65b68ea5f541fddf64242414ed22b1d4d5c0ea44b3cb42d1c03e7d63e881f59167637dad4041d97990362c95ff005b2f9c6351f963eacf27051d70a9ceb30eaa6b30c4b5a6bcb644a23b2a2ab980e44992e21fd5fe74c20a940ba9c187f04f1b42f05f20862293fc388ea4954f20d6252179eedd51a45ca5ae03ad97a31cd50f5d2fa7ba64f01671b0b2b00d58e29e2f46c97f67ccf60c86b6b57f7e3c4e5e36762c79389259caa29e720bd4ead2738dba32d4c6dbc7937b04b63f18e0eacc6c527b598961cadb9c85ed28bfc2b1072ec8745274a762ca540acc945b16078bb612fd5f251cffdcffdf2a62b2125168fd08b78cc691d6160f69653aae14328f11e638fa1d32ed0cd0617361b4fad2116ced57406039153902f50cdfcc09d1b6fb98ce16c848e668aa771e4934212137d5868e4cf26938448540381261d447db5c965aa94ece082776eaba0b9a9230aaae54a199b7d14212f12c6d32abf873d98c10f1831397e39dd5f3d470d4b0c"
            })
        );

        // should be invalid for different params
        vm.expectRevert();
        anonymousAttester.attest(
            schema,
            target,
            role,
            "Hello, world!",
            AttestationProof({
                revokerHash: bytes32(
                    uint256(
                        4916179360654529033703385338351006789068467821670893077446447393102117697567
                    )
                ),
                nonce: bytes32(uint256(123456780)), // 9 -> 0
                timestamp: bytes32(uint256(1718875852)),
                proof: hex"22be7705a7801c0d264f626d75ddca3f4f55160f0b8748100b09500971c6bc8c1442933eb1437567972ace3c2965a5172b9fd657b927261636fcb2e3cce56a2e0ec182d8238536c1878124a527533ea01dffe8ad364b8ddde15106c946c5158001d30dedaf65ece7a892ab15fdf2901c1b39204b06d07cd3450b8b9415682171143b45b2789d5980c703d9286b9dc1882bf7f7c7f9b91c9400e0f1769c8b3a5f27509f36b7d08f91db6e0c5390aae0753df2044322919d1a7631684d2a3966751bfb48d0da8df7993f71ec15d39f5c62068544ae858c5607b458b5772a88fbdf10e56869be23fd55b46b80510740c01ca038e88e82086f5f08b5026be6bf0fa22426ee5ebd358ab2976b2467ff6a832253024b6b3179e2aff8b8bfa3a8a82d5e018a1e9130600787d8b40cabc1cfead90224cea9f359e1c942c83a272c6c14902a1e289c97cf757e5343748b546b19cc4a5db274a88805ec8955920391867a0322fc562142e7ef61da26e50bf99b80874c14d105e1642073ae80742c104dc88029b007c73fe49bb50d36000f2dbe832dad1b746452d1dd37b161f28a105392e302fc7e033665b3cb45f84348ded0132e67ea01a467eb0e1a011ee8569963bc2e1f3113a8b9f5d9d8142538e564b8b025407fbe67e880c20fb5a52d8b3f0bdee52a6baceb85b30a556d4519b7f0c89c476a06f103b23d5f65f140dba3c27bef2e30412b3546ca51ca80bdb7a83d78139772cf003873c2838f300b616b0e1c99f5143b6542b342760bd44d6ba57cff8dfac1d6c83b9371fb9491f921a46b39bc421e0a6fada8dba1a87eedcaded7ac02ad71e1cd3fc31f274a46543403acf8272f114ba0ba5c70bbfca334e802070a088a33a9e68b41e249f794f67757c5f454e010530fbb572afdcbe25e3a9416b713cf4160d1f1ef33907832571f1d2a361b161cd1afb29069e48d85c38b880b60486d52e36c35210d4dccc1f07dfcf4471cbc2726a6fa59e7ae2bd3a22bf0cd03871390d3194127882ae9423b957e61b490d32b9f30815f5e1c039dd94bc7702c93c242b5407175092636b3bf4cd3c28810c90d2d9a4d534cea84bd66c9375717aed3e7690c023cab6225790460a323e692632041f756209d884b3c74f204046f4b32b857a902269711854b0b1198b9b40e830619f4e86009972fdfdc5fb206b671578b10c018ef7cd15ad3d1b86cf897cf5e28ce297b1a248102f5e22491c049fe471f4424233d02352c626995bbcef4e5320136ee9edfe64f6e9fb5854c17d46f8689da6f1110773206c2b8718aa9b45945093a009987e41d90d6e4ac3a11ddacc63f670d8ac41e2cd0fc0f07d4a86538e70a8f4355e38301d5f48ed94a6ff7d23a8effe6e12b0b36003465583201b5d73604014e83eaef38b849e23e7375441f928b57b16e81e707eea97ee5843a552d0b1108069845aa707fd6148e17d27e8eb1e649514cd58fe7dd8761daff37d8521a00d2ca41a8612c4811b792d2d319fd2ec9ff88070d5c8be081759a738ca9abc80da02eee5858eee3bd55b2d11bd71852d089da6f77cb5577c43dcc7d9f7d750212bef77fe32d7484db62a0234cf35cf29db5ef6037607dd9c7f6c368fc19897c1956396a26b78d54d4d4abc66f73dbf69c8bf17b6d86d7fa3d7b915ccd989e330fe482c322b0ea90a5ab41e89eee3ba70c6c061b181b06eb9ff8efa787d8fea41a8299b0be62524b020a5dce81b6243bc090e5fa7a23b3e7a5c8abb7d2e91ece0975ce3139f99c1fd59aa5df77bbbd0aadb0547f0165ce8e48dc0527855fa0ac0070c509d6405c421113a7966e443690e7b8bdb2117111477ec56117d59aa9212a8f45fdfa816045e7ce25e672b6461e3a19a662b92a6a081de6bba273e832b8276221e7d6dffb365cbbf3f2a2ca1b878d6e9331361d456521416996c85d1b6d2152b369623c63f08ac218ce731a35e95ac497c2881b428e66d3daf1659cabb02527bd0ca982dc796a73d1d1c0437878bc21953732ca73331f213a3139c4f2591d06282cd9919f0f4d3b8f41bd7c85a6677159511d979cc245bc837249de0f63286c09d279d9431ddd311bb6f59b773eab6db3e16473cf11ab90eb2d5a72709e1a8ef4d8103fdad45247588a22fa85e6389c0b1e0812744c91dd3f4f87971a1923a8c5ff2c36e42d5ca0fa2d31d696e35402b7fe0d9925689fe813d93c7bf92923d726a1d5afdd95809bf1da309635aebeb962a4f0bbd00abcde7e5a31f8e3df1296350f6e397df41a2ff72dca6558d379fbcf0e49433ada5b6b397d505c23e801d71f266769645ae556b0f660f99b92ed037dbb82d3e84b7c9e2a1fb70e2790073f88a32dca9bdff0bfb039cd8a00d9973e6fa38fe7a275eef88b73e88e21a4206673f2e827ec66f286dac441c731e4c06318d41eaa313c56a942e0a3512a3f004c85378023a5a4bc93f00dc1d5e7c09b4143fd177a987938139e95ea7906f312aa332fb826e7338336ac2d4f956ab8fa54c65b68ea5f541fddf64242414ed22b1d4d5c0ea44b3cb42d1c03e7d63e881f59167637dad4041d97990362c95ff005b2f9c6351f963eacf27051d70a9ceb30eaa6b30c4b5a6bcb644a23b2a2ab980e44992e21fd5fe74c20a940ba9c187f04f1b42f05f20862293fc388ea4954f20d6252179eedd51a45ca5ae03ad97a31cd50f5d2fa7ba64f01671b0b2b00d58e29e2f46c97f67ccf60c86b6b57f7e3c4e5e36762c79389259caa29e720bd4ead2738dba32d4c6dbc7937b04b63f18e0eacc6c527b598961cadb9c85ed28bfc2b1072ec8745274a762ca540acc945b16078bb612fd5f251cffdcffdf2a62b2125168fd08b78cc691d6160f69653aae14328f11e638fa1d32ed0cd0617361b4fad2116ced57406039153902f50cdfcc09d1b6fb98ce16c848e668aa771e4934212137d5868e4cf26938448540381261d447db5c965aa94ece082776eaba0b9a9230aaae54a199b7d14212f12c6d32abf873d98c10f1831397e39dd5f3d470d4b0c"
            })
        );

        // should be invalid for different params
        vm.expectRevert();
        anonymousAttester.attest(
            schema,
            target,
            role,
            "Hello, world!",
            AttestationProof({
                revokerHash: 0x156244c131d6f68246496786659cf2e7a1119e83b3e3d88173f1eb5ce3b110cf,
                nonce: 0x00000000000000000000000000000000000000000000000000000000075bcd15,
                timestamp: 0x000000000000000000000000000000000000000000000000000000006673f6cc,
                proof: hex"0c703e256e543ff1f44411a1d6f73881e3d8e3e833bce33e8d33b854854a83a22761bb6ea49d233315c4340743130dd4c23c3903aab1bf1d9e36122a7cf6b3b1248bd9e4933fb3efcc1649ef961f84db89194aec9537d1c2b436b5bf3291e9670846df6f496e5c99147734a28367dad0cb893afca30ce405ebb96dbb344119a50f1ca33de11b995c2cac227bd4d8f061f850b4f6f385df041daa812e73db19b0167a08bbd317e5b9fb5d1ecc0b5b20a9d94e06d398ff524551a1f1445c958f7916ea86c51d15292652fa50ee4f30631492971cb2ed308a26c6d1f5dde13ccfd1034fd354dda50a6b5d9e92c980cf68757b7237dc89271ab252f253399ebd5aeb2c1b33e521d0f7127b07ce74513f5b5373f28c77b1b6e3409c30b097154dbba114633a8d95a51f4c4ee89079455be3e22a25a2b082239c9f5196a19d11d04b072d4aaba001f09dd28a74c615bee6cc8f50b1aefc2b0cf7fdb5f672a048a029bb227489ebf2d9ee3a7285f77a86f95cc361108d6ff5183d6d79644a239a00e9e5038c9adc6c1d3469062de179454edb1947cb2e3e3412509eaf14c752e4cd3f2f0e4515a68dab739194e25cde115e7bfebf8e9b27bd604947cea1c9aeeb514d3e1df7b4193ba339072f2cb01639be1c87430bfed8e0dcb1a9903a8829f83981290570394a1aa08b7e5a149c91a876f24ba24468fc72f2883d3d2755c384bd25e92c59e5ebe66f50f1166462a07d0c1119680c58efcb7f2c20e3851b92ac5beda30ee69a3cdcef1890ba89546535149849a200e092867a2d97a1e9b61c3e4dc20c2b578a44ab7ee43caac7b581f083d08329a823cc3b60f12e9c6bdc082f434a751b5ed5bc367de40ae6837f6d05e8abfe3b73bcbc64fa10f2dd89fb2c4f6be43d258ae59d27e64821ff19c9a10fc0ba143f515e21b5498427aa8b4d9f5c275fde107aac95cb1193d85f96c67ec4d8665ab553b9af27d94d39043aceb658e65fa40673829fe355e7bf5811f07ec2ed83437a05b62ea3ad85484f3c52852501276118a2d3425e99d268468aa3c68a141dc2c5f556fd3746e33f66cd66ade65f4d1202e84bbde4b2f02d23cc0f2c00cda97173bbf4eff62845aa66bb6c322d9e5fa12c01a0fcc9bb8e56d8f84bc47496383c9b9b06f6ed81c302de46b9d14c3bc41025dc395f8ef0d04e136a70c01ba4b87338883f1264d0f37523a217a35e3998b3155023ac24e0591a204918aae212de421ad3059558fca286025b447a4300e8f42f40d04107f635305d00418bced4e60a3f133058b173058f257cb29fcde60651151fa6e6f7a337ea3f2670023d5a85c0dca52f5ce32138d20222cd2d1e9be3750390e2e65d480ff3e6970c7a329ded6f7c4fdedc4247477fbf8e10150c100ea82dd5d10b7bb58a6215c5df445285f7260c9f6b35f780d1a1c834e95f4806bb8f0b197b2d6ceb2233dcc9cfb33e7ba0b4d9b614cfeb0c1047e832dcc9d5768faa0dbbc705059b71f57d0700050573d8b9ab85df03f5644070b559f15e23dfdd1f09990f92fb1f62107f6bba3d55f968857ad96a6b7e09be510b7858fae164de7329b6722e991fa77ac5a9879233d46b024521e24c946c00b37a63906f63075d7d003919308bb8a74d0c943184dcbb33bf475a16b7cfcb7f118b872cdac9377c2d1499703d2121a8aadbcb57b7aab232e23935c81937087e6eb503f83f52f4833b05bbfca38d08b4533980571ed6358998201c74153d5786ff95f8652f0e29397816016d64c14f3d3018b6a35ec70de16ba80079124ef388c9ca1e1eab9a58323a21fc0a620bad0e37b6ab278396e3a3f65c83ff7e22e994a5d8526fbeedab4570149bfd46221207981ad01fdebd256c1069f42f8ca983a6972a716842b30ed9872aa3b56405ec42ba4981250f56e2971b4ba02e0351b7e27e76ef2666f84e6d8f26d76552f12e980b6381637e57eb6fea6e5d44ed45b7aa259b78c2669c9fd12a2e4c0184a92bb12f1388e5ce2e8c830e7500eedbab4ab611d40d9b0bdd975ab30ec6b1f8f4bf21d7e2b57c69ab47ec298caeb284fb932b630b11009818a1895b062ea17e0dba4e4fc86cbfb06c64aa9a69c562b8a3e5d6009dc882debc05bf050e68d7192a80d68e251755842ec802afbe0b0e19f445b0902a37ba620a1ac96720187105206245b490f30058129c1c4ee515fabd6369328011ee1416b0403b98251850c37d8307c99ee94e338f6fe5eaa36d85f5692c83293bcc40881a279e0329230c207930effe55ece0967a1f397916098e0bed2db6f734ececee2b15fa6a0bf482623ed8128be96a37286fea48ff3651c22275e7b5bd72ede716b352fa7d02e473a785ab9206c5015076de4caba12730df3f326e10565bf8b1f8b31f1efb29c6f37537f716c7e07fbd65faea5613eb1fa9d3f29d2200131e317f0581793e123672d5b13f99bdd6ac541d8580dc400cbe5b9f8e505d3b2e50e0502edbca6f1027d282ecf81fd5edabd63a217578cead453a7535a0f29ba7ab8987052034861db61cd5b0f593cb73d6ba97d32d8b95d97b2511d4ae39fb9968d0304b1c9d8704051b110535542abddbf6342adbfbf6dab383dbcaf509b05faefd696f3e31062752d076e82c39f6aa3fb3c27e13a77ef12176ab22835898442799f6a19ff7ca107439bdd21403f7cd77ac2c640a44f953fd4c570fba567d0fa140f00188161e11ddd3fbfff12119ece22200f98ee5a002b68c4e6e2ae72c71efbd5c19f9c9e12f2ab52dd1acb14b7bee96717240f937ef0057f0354d76cad65666df9253fbcf2bec780d48e5759e549e97f8a1c6c4f76e57a8640e562d4fab58cb12a44c6ffe13d8dde0df0fbee4cb720bd42f93580e4a07cfae64ccd20c21d3aa8421506a030a03d60880e1d59724390e2512bc702ca41277beabbec9da2adff3d2d3cb972c00fadfba059f8a1ffca1b18f5295270aba80a26f40307ecf6d4b62da29835f900951dc1846221b1189b46627015e53257ce8a93f4cbb37b9b10a53291d0dd3ff"
            })
        );
    }
}
